name: Update Submodules

on:
  repository_dispatch:
    types:
      - update_submodule
  workflow_dispatch:

env:
  SSH_PUB_KEY:
    ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKzKKT5xCssZ38UI5VWaPOqW3ldVsg/0tDceTrCFnsd3 github.action@antoinebellanger.fr

jobs:
  update-submodules:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Main Repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          persist-credentials: 'true'

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update Submodules
        run: |
          echo "Updating submodules..."
          git submodule status
          git submodule update --remote
          echo "Submodules updated, checking status..."
          git status
          git diff
          echo "Committing changes..."
          git add .
          git commit -m "update: submodules to latest version" || echo "No changes to commit"
          git push || echo "No changes to push"

  mirror:
    if: github.event_name != 'pull_request' && github.repository_owner == 'dawpitech'
    runs-on: ubuntu-latest
    needs: update-submodules

    steps:
      - name: Checkout Main Repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: '0'
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          persist-credentials: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Remove submodules
        run: |
          rm .gitmodules
          rm -rf backend/.git*
          rm -rf frontend/.git*
          git rm --cached backend
          git add .
          git rm --cached frontend
          git add .
          git commit -m "chore: Resolve submodules"

      - name: Push to epitech
        run: |
          git remote add epitech "${{ secrets.MIRROR_REPO }}"
          git push --force epitech
