services:
  db:
    image: postgres:16
    profiles: [db, backend]
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: JEB_data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d JEB_data" ]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s

  migrate:
    profiles: [backend]
    build:
      context: backend
      target: builder
    command: "go run migrate/migrate.go"
    depends_on:
      db:
        condition: service_healthy
    environment:
      GIN_MODE: ${MODE}
      DB_URL: "host=db user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=JEB_data port=5432 sslmode=disable"
    restart: "no"

  api:
    profiles: [backend]
    build:
      context: backend
      target: release
    depends_on:
      migrate:
        condition: service_completed_successfully
    ports:
      - "24680:24680"
    environment:
      API_URL: ${API_URL}
      API_KEY: ${API_KEY}
      GIN_MODE: ${MODE}
      JWT_MASTER_SECRET: ${JWT_MASTER_SECRET}
      DB_URL: "host=db user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=JEB_data port=5432 sslmode=disable"

  frontend:
    profiles: [frontend]
    build:
      context: frontend
      target: runner
    ports:
      - "80:3000"

  swagger:
    profiles: [ backend ]
    image: swaggerapi/swagger-ui
    depends_on: [ api ]
    ports:
      - "8080:8080"
    environment:
      SWAGGER_JSON_URL: "http://localhost:24680/api/openapi.json"